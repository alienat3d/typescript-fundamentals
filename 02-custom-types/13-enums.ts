// * 11.0 "enums" нужны для описания связанных констант вместе под одним именем. Возьмём всё тот же пример с размерами продукта в виде "union types" и определим как "enum". enum, записанный таким образом называют числовым. Потому, что каждое значение автоматически нумеруются.
// ? 11.1 Хорошо, но как это применить? Вместо того, чтобы иметь дело с числами или строками, которым мы задали особое название, которое может быть легко забытым или иметь опечатку, мы можем использовать enum и IDE будет напоминать и делать автозаполнение за нас.

/* enum Size {
  small, // 0
  medium, // 1
  large, // 2
} */

// 11.4 Мы можем записать enum иначе, теперь вместо автоматически номерованного списка, мы назовём каждый элемент строкой, т.о. превратив числовой enum в строковый. Для этого просто каждому элементу списка enum присваивается строковое значение. Возможно такой подход покажется более удобным для улучшения читабельности логирования в консоли и последующего дебаггинга.

/* enum Size {
  small = 'small',
  medium = 'medium',
  large = 'large',
} */

// 11.5 А ещё есть т.н. "гетерогенные enum", когда числовые и строковые подходы миксуют в одном enum.

enum Size {
  small,
  medium = 'medium',
  large = 'large',
}

// 11.2 В данном примере нам нужно лишь запомнить название enum "Size". И тогда после того, как мы наберём её с точкой у нас будет в распоряжении контекстное меню со всем доступным этому enum содержимым. (Если оно не выпадает автоматически, как у меня в VS Code, то нажать "Ctrl + Space".) Теперь нам не нужно искать, вспоминать и исключена опечатка.

Size.small;

// 11.3.0 Мы можем использовать enum также и для определения типов данных для переменных или параметров для функций. Укажем, для примера, в данной функции тип данных параметра в виде enum.

function saveProductSize(size: Size) {
  // ...some code
}

// 11.3.1 И теперь, когда мы вызываем функцию, чтобы отвечать требованиям типа данных в enum, то мы просто указываем нужный элемент внутри enum через "." после названия enum. Это возможно, потому, как в отличие от многих других фич TypeScript enum - реальные объекты, доступные во время исполнения кода. ↑

saveProductSize(Size.medium);
